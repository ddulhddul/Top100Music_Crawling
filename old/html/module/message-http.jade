div#messageSidebar(data-open='false', data-message-count='0')
  div.messageSidebar
    form#messageForm(onsubmit='return false')
      div.row
        div.col-xs-4
          input.form-control.input-sm(type='text' name='writer' placeholder='Anonymous')
        div.col-xs-8
          div.input-group
            input.form-control.input-sm(type='text' name='content' onkeydown='if ( event.which === 13 ) { sendMessage() }')
            span.input-group-btn
              button.btn.btn-default.btn-sm(type='button' onclick='sendMessage()') Send
      // div.input-group
      //   input.form-control(type='text' name='content' onkeydown='if ( event.which === 13 ) { sendMessage() }')
      //   span.input-group-btn
      //     button.btn.btn-default(type='button' onclick='sendMessage()') Send
    ul#messageList
  div.messageSidebarCurtain(onclick='toggleNav()')

  script.

    // 메시지 목록 토글 스타일
    var messageSidebarStyle = {
      open: { 'width': '80%', 'max-width': '640px' },
      close: { 'width': '0' }
    }

    // puclic function
    //  - 모듈 최초 로드시 호출된다.
    $(function () {
      // 부모 문서에서 특정 속성을 가진 요소에 이벤트를 바인딩한다.
      $('body').find('*[data-role="toggle-message-sidebar"]').on('click', toggleNav)

      // Initialization
      loadMessage()
    })

    // puclic function
    //  - 메시지 목록을 열거나 닫는다.
    function toggleNav () {
      var isOpen = Boolean($('#messageSidebar').data('open'))
      $('#messageSidebar')
        .data('open', !isOpen)
        .find('.messageSidebar')
        .css(isOpen ? messageSidebarStyle.close : messageSidebarStyle.open)
        .end()
        .find('.messageSidebarCurtain')
        .css(isOpen ? { width: '0' } : { width: '100%' })
    }

    // service function
    //  - 메시지를 전송한다.
    function sendMessage (message) {
      var writer = $('#messageForm').find('input[name=writer]').val().trim() || 'Anonymous'
      var content = $('#messageForm').find('input[name=content]').val().trim()

      // validate
      if ( content.length <= 0 ) { return }
    
      $('#messageForm').find('input[name=content]').val('')
      var messageCount = $('#messageSidebar').data('message-count')
      $.post(url + '/message', { writer: writer, content: content, messageCount: messageCount }, _renderResult)
    }

    // service function
    //  - 메시지를 조회한다.
    function loadMessage () {
      var messageCount = $('#messageSidebar').data('message-count')
      $.getJSON(url + '/message/' + messageCount, _renderResult)
    }

    // private function
    //  - 조회된 메시지를 출력한다.
    function _renderResult (result) {
      // 재조회를 위해 현재 메시지 개수를 저장한다.
      $('#messageSidebar').data('message-count', result.messageList.length)

      // 조회된 메시지를 메시지 목록에 출력한다.
      $('#messageList').empty()
      result.messageList.forEach(function (message) {
        // XXX temporal code
        var showSeq = true
        var seqStr = showSeq ? '[' + message.seq + '] ' : ''

        var $li = $('<li/>').addClass('message').data('seq', message.seq)
            $li.append($('<h6/>').text(seqStr + message.writer + ' ').append($('<small/>').text(message.formattedDate)))
            $li.append($('<small/>').addClass('content').text(message.content))
        $('#messageList').append($li)
      })

      // 조회된 메시지보다 많은 숫자의 메시지가 존재할 경우, 추가 조회를 위한 버튼을 출력한다.
      if ( result.messageList.length < result.totalCount ) {
        $('#messageList').append($('<li style="text-align: center; cursor: pointer;"><h4>More</h4></li>').click(loadMessage))
      }
    }
